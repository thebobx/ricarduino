/* Define your theme modifications inside next mixin */
@mixin net_tillard_ricarduino-halo-ext {
	.c-app-menubar,
	.v-tabsheet-tabcontainer-c-main-tabsheet {
		display: none;
	}

	.v-select-optiongroup-button-switcher {

  @include valo-optiongroup-horizontal;

  .v-select-option {
    margin: 0;
    padding-left: 0;
  }

  .v-select-option > input {

    $checked-text-color: #f9f0ef;

    &:checked ~ label {
      color: $checked-text-color;
      @include valo-border-with-gradient($border: $v-border, $color: $v-focus-color, $gradient: $v-gradient);
      @include valo-gradient($v-focus-color, $v-gradient);
      @include box-shadow(valo-bevel-and-shadow($bevel: $v-bevel, $shadow: $v-shadow, $background-color: $v-focus-color, $gradient: $v-gradient));
    }

    & ~ label:after,
    &:checked ~ label:after {
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      border-radius: 0;
      border: 1px solid;
      background-color: transparent;
    }

    &:checked:hover ~ label:after {
      @include valo-button-hover-style($background-color: $v-focus-color);
    }

    &:checked:focus ~ label:after {
      $focus-style: inset 0px 0px 3px 1px rgba($checked-text-color, 0.5);
      @include box-shadow($focus-style);
    }

    &:checked:active ~ label:after {
      @include valo-button-active-style($background-color: $v-focus-color);
    }

    &:hover ~ label:after {
      @include valo-button-hover-style($background-color: $v-background-color);
    }

    &:focus ~ label:after {
      @include valo-button-focus-style();
    }

    &:active ~ label:after {
      @include valo-button-active-style($background-color: $v-background-color);
    }

    $padding-height: 6px;
    $padding-width: round($v-unit-size/2.4) + round($v-border-radius/3);
    $border-width: first-number($v-border);
    $height: $v-unit-size - 2 * $padding-height - 2 * $border-width;

    & ~ label {
      height: $height;
      padding: $padding-height $padding-width;
      border-radius: 0;
      @include valo-border-with-gradient($border: $v-border, $color: $v-background-color, $gradient: $v-gradient);
      @include valo-gradient($v-background-color, $v-gradient);
      @include box-shadow(valo-bevel-and-shadow($bevel: $v-bevel, $shadow: $v-shadow, $background-color: $v-background-color, $gradient: $v-gradient));
    }

    & ~ label:before {
      display: none;
    }
  }

  .v-select-option:first-child,
  .v-select-option:last-child {
    margin: 0;
  }

  .v-select-option:first-child > input {
    & ~ label {
      border-top-left-radius: $v-border-radius;
      border-bottom-left-radius: $v-border-radius;

      &:after {
        border-top-left-radius: $v-border-radius;
        border-bottom-left-radius: $v-border-radius;
      }
    }
  }

  .v-select-option:last-child > input {
    & ~ label {
      border-top-right-radius: $v-border-radius;
      border-bottom-right-radius: $v-border-radius;

      &:after {
        border-top-right-radius: $v-border-radius;
        border-bottom-right-radius: $v-border-radius;
      }
    }
  }

  .v-checkbox>input ~ label:after {
    content: "";
  }
}

}